# Cache zone
proxy_cache_path /var/cache/nginx
  levels=1:2
  keys_zone=STATIC:10m
  inactive=7d
  use_temp_path=off;

upstream nextjs_upstream {
  server nextjs:3000;
}

upstream graphql_upstream {
  server graphql:4000;
}

# upstream website_upstream {
#   server website:9000;
# }

upstream sockjs-node_upstream {
  server socksjs-node:3000;
}

server {
  proxy_cache STATIC;

  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  server_name _;
  server_tokens off;

  # SSL
  ssl_certificate /etc/nginx/certs/localhost.pem;
  ssl_certificate_key /etc/nginx/certs/localhost-key.pem;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;
  proxy_cache_bypass $http_upgrade;

  # BUILT ASSETS (E.G. JS BUNDLES)
  # Browser cache - max cache headers from Next.js as build id in url
  # Server cache - valid forever (cleared after cache "inactive" period)
  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  # STATIC ASSETS (E.G. IMAGES)
  # Browser cache - "no-cache" headers from Next.js as no build id in url
  # Server cache - refresh regularly in case of changes
  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  # DYNAMIC ASSETS - NO CACHE
  location / {
    proxy_pass http://nextjs_upstream;
    try_files $uri /index.html;
  }

  # additional config
  # favicon.ico
  location = /favicon.ico {
    log_not_found off;
    access_log off;
    proxy_http_version 1.1;
    proxy_pass http://nextjs_upstream;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  # robots.txt
  location = /robots.txt {
    log_not_found off;
    access_log off;
    proxy_http_version 1.1;
    proxy_pass http://nextjs_upstream;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  # assets, media
  location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
    expires 7d;
    access_log off;
    proxy_pass http://nextjs_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  # svg, fonts
  location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
    add_header Access-Control-Allow-Origin "*";
    expires 7d;
    access_log off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  return 301 https://$default_server:$request_uri;
}

# HTTP redirect
server {
  proxy_cache STATIC;

  listen 80 default_server;
  listen [::]:80 default_server;

  server_name _;

  return 301 https://$default_server:$request_uri;
}